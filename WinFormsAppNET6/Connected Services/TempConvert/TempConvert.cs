//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WinFormsAppNET6.TempConvert
{
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "1.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="https://www.w3schools.com/xml/", ConfigurationName="WinFormsAppNET6.TempConvert.TempConvertSoap")]
    public interface TempConvertSoap
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="https://www.w3schools.com/xml/FahrenheitToCelsius", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        WinFormsAppNET6.TempConvert.FahrenheitToCelsiusResponse FahrenheitToCelsius(WinFormsAppNET6.TempConvert.FahrenheitToCelsiusRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://www.w3schools.com/xml/FahrenheitToCelsius", ReplyAction="*")]
        System.Threading.Tasks.Task<WinFormsAppNET6.TempConvert.FahrenheitToCelsiusResponse> FahrenheitToCelsiusAsync(WinFormsAppNET6.TempConvert.FahrenheitToCelsiusRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://www.w3schools.com/xml/CelsiusToFahrenheit", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        WinFormsAppNET6.TempConvert.CelsiusToFahrenheitResponse CelsiusToFahrenheit(WinFormsAppNET6.TempConvert.CelsiusToFahrenheitRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://www.w3schools.com/xml/CelsiusToFahrenheit", ReplyAction="*")]
        System.Threading.Tasks.Task<WinFormsAppNET6.TempConvert.CelsiusToFahrenheitResponse> CelsiusToFahrenheitAsync(WinFormsAppNET6.TempConvert.CelsiusToFahrenheitRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "1.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="FahrenheitToCelsius", WrapperNamespace="https://www.w3schools.com/xml/", IsWrapped=true)]
    public partial class FahrenheitToCelsiusRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://www.w3schools.com/xml/", Order=0)]
        public string Fahrenheit;
        
        public FahrenheitToCelsiusRequest()
        {
        }
        
        public FahrenheitToCelsiusRequest(string Fahrenheit)
        {
            this.Fahrenheit = Fahrenheit;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "1.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="FahrenheitToCelsiusResponse", WrapperNamespace="https://www.w3schools.com/xml/", IsWrapped=true)]
    public partial class FahrenheitToCelsiusResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://www.w3schools.com/xml/", Order=0)]
        public string FahrenheitToCelsiusResult;
        
        public FahrenheitToCelsiusResponse()
        {
        }
        
        public FahrenheitToCelsiusResponse(string FahrenheitToCelsiusResult)
        {
            this.FahrenheitToCelsiusResult = FahrenheitToCelsiusResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "1.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CelsiusToFahrenheit", WrapperNamespace="https://www.w3schools.com/xml/", IsWrapped=true)]
    public partial class CelsiusToFahrenheitRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://www.w3schools.com/xml/", Order=0)]
        public string Celsius;
        
        public CelsiusToFahrenheitRequest()
        {
        }
        
        public CelsiusToFahrenheitRequest(string Celsius)
        {
            this.Celsius = Celsius;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "1.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CelsiusToFahrenheitResponse", WrapperNamespace="https://www.w3schools.com/xml/", IsWrapped=true)]
    public partial class CelsiusToFahrenheitResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://www.w3schools.com/xml/", Order=0)]
        public string CelsiusToFahrenheitResult;
        
        public CelsiusToFahrenheitResponse()
        {
        }
        
        public CelsiusToFahrenheitResponse(string CelsiusToFahrenheitResult)
        {
            this.CelsiusToFahrenheitResult = CelsiusToFahrenheitResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "1.0.0")]
    public interface TempConvertSoapChannel : WinFormsAppNET6.TempConvert.TempConvertSoap, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "1.0.0")]
    public partial class TempConvertSoapClient : System.ServiceModel.ClientBase<WinFormsAppNET6.TempConvert.TempConvertSoap>, WinFormsAppNET6.TempConvert.TempConvertSoap
    {
        
        /// <summary>
        /// Implement this partial method to configure the service endpoint.
        /// </summary>
        /// <param name="serviceEndpoint">The endpoint to configure</param>
        /// <param name="clientCredentials">The client credentials</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public TempConvertSoapClient(EndpointConfiguration endpointConfiguration) : 
                base(TempConvertSoapClient.GetBindingForEndpoint(endpointConfiguration), TempConvertSoapClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public TempConvertSoapClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(TempConvertSoapClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public TempConvertSoapClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(TempConvertSoapClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public TempConvertSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        public WinFormsAppNET6.TempConvert.FahrenheitToCelsiusResponse FahrenheitToCelsius(WinFormsAppNET6.TempConvert.FahrenheitToCelsiusRequest request)
        {
            return base.Channel.FahrenheitToCelsius(request);
        }
        
        public System.Threading.Tasks.Task<WinFormsAppNET6.TempConvert.FahrenheitToCelsiusResponse> FahrenheitToCelsiusAsync(WinFormsAppNET6.TempConvert.FahrenheitToCelsiusRequest request)
        {
            return base.Channel.FahrenheitToCelsiusAsync(request);
        }
        
        public WinFormsAppNET6.TempConvert.CelsiusToFahrenheitResponse CelsiusToFahrenheit(WinFormsAppNET6.TempConvert.CelsiusToFahrenheitRequest request)
        {
            return base.Channel.CelsiusToFahrenheit(request);
        }
        
        public System.Threading.Tasks.Task<WinFormsAppNET6.TempConvert.CelsiusToFahrenheitResponse> CelsiusToFahrenheitAsync(WinFormsAppNET6.TempConvert.CelsiusToFahrenheitRequest request)
        {
            return base.Channel.CelsiusToFahrenheitAsync(request);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.TempConvertSoap))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                return result;
            }
            if ((endpointConfiguration == EndpointConfiguration.TempConvertSoap12))
            {
                System.ServiceModel.Channels.CustomBinding result = new System.ServiceModel.Channels.CustomBinding();
                System.ServiceModel.Channels.TextMessageEncodingBindingElement textBindingElement = new System.ServiceModel.Channels.TextMessageEncodingBindingElement();
                textBindingElement.MessageVersion = System.ServiceModel.Channels.MessageVersion.CreateVersion(System.ServiceModel.EnvelopeVersion.Soap12, System.ServiceModel.Channels.AddressingVersion.None);
                result.Elements.Add(textBindingElement);
                System.ServiceModel.Channels.HttpTransportBindingElement httpBindingElement = new System.ServiceModel.Channels.HttpTransportBindingElement();
                httpBindingElement.AllowCookies = true;
                httpBindingElement.MaxBufferSize = int.MaxValue;
                httpBindingElement.MaxReceivedMessageSize = int.MaxValue;
                result.Elements.Add(httpBindingElement);
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.TempConvertSoap))
            {
                return new System.ServiceModel.EndpointAddress("http://www.w3schools.com/xml/tempconvert.asmx");
            }
            if ((endpointConfiguration == EndpointConfiguration.TempConvertSoap12))
            {
                return new System.ServiceModel.EndpointAddress("http://www.w3schools.com/xml/tempconvert.asmx");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        public enum EndpointConfiguration
        {
            
            TempConvertSoap,
            
            TempConvertSoap12,
        }
    }
}
